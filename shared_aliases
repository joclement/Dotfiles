#!/bin/sh  
################################### My aliases ##########################################

###git aliases


###miscellaneous aliases
alias ll='ls -l'
alias la='ls -al'
alias l='ls -F1'
alias cl='reset'
alias kfi='pkill -f /usr/lib/firefox/firefox && (firefox &> /dev/null &)'
alias pingTest='ping 8.8.8.8'
alias upd='sudo apt-get update'
alias upg='sudo apt-get upgrade'
alias restnet='sudo service network-manager restart'
alias testHDMI='speaker-test -c 2 -r 48000 -D hw:0,3'


###for cd into ancestor directories
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'


###shortcuts for programs
alias py='python3'
alias v='vim'
alias g='git'
alias s='svn'

###shortcuts for svn
alias sst='svn status'
alias sa='svn add'
alias su='svn update'
alias sci='svn commit'
alias sinf='svn info'
alias sd='svn diff'
alias svnignore='svn propset svn:ignore -RF ./.svnignore .'





################################ My alias functions #####################################

#alias function for colordiff for svn
function sdc() {
	svn diff $1 | colordiff | less -R
}

#opens a file the standard way and leads the output to null
function op {
	xdg-open $1 > /dev/null
	sleep 0.35
	:
}

#updates and upgrades the system via apt-get
function up () {
	sudo apt-get update;
	echo "Do you wish to upgrade?";
	varConfirmLoop=$(confirmLoop)
		if (( varConfirmLoop == 0 ));
	then
		sudo apt-get upgrade;
	fi;
}

#function to wait for a valid answer from the user in a loop
function confirmLoop () {
	varConfirm=$(confirm);
	compare=2;
	while true;
	do
		if ((varConfirm == compare));
		then
			
			varConfirm=$(confirm);
		else
			break;
		fi;
	done;
	echo $varConfirm;
}

#function to let the user confirm his previos decision
function confirm () {

	read -p "" choice;
	if [ "$choice" == "Y" ];
	then
		echo 0;
	elif [ "$choice" == "n" ];
	then
		echo 1;
	else 
		echo 2;
	fi;

}

#a function to create a directory and directly move into it
function mkcd {
  if [ ! -n "$1" ]; then
    echo "Enter a directory name"
  elif [ -d $1 ]; then
    echo "\`$1' already exists"
  else
    mkdir $1 && cd $1
  fi
}
